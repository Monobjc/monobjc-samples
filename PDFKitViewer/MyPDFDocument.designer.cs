// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Monobjc.Samples.PDFKitViewer {
	using Monobjc;
	using Monobjc.AppKit;
	using Monobjc.Quartz;
	
	
	public partial class MyPDFDocument {
		
		partial void DoFind(Id sender);

		partial void PerformFindPanelAction(Id sender);

		partial void TakeDestinationFromOutline(Id sender);

		partial void TakeFindString(Id sender);

		partial void ToggleDrawer(Id sender);

		[IBOutlet()]
		[ObjectiveCIVar("_drawer")]
		public virtual NSDrawer _drawer {
			get {
				return this.GetInstanceVariable <NSDrawer>("_drawer");
			}
			set {
				this.SetInstanceVariable <NSDrawer>("_drawer", value);
			}
		}
		
		[IBOutlet()]
		[ObjectiveCIVar("_noOutlineText")]
		public virtual NSTextField _noOutlineText {
			get {
				return this.GetInstanceVariable <NSTextField>("_noOutlineText");
			}
			set {
				this.SetInstanceVariable <NSTextField>("_noOutlineText", value);
			}
		}
		
		[IBOutlet()]
		[ObjectiveCIVar("_outlineView")]
		public virtual NSOutlineView _outlineView {
			get {
				return this.GetInstanceVariable <NSOutlineView>("_outlineView");
			}
			set {
				this.SetInstanceVariable <NSOutlineView>("_outlineView", value);
			}
		}
		
		[IBOutlet()]
		[ObjectiveCIVar("_pdfView")]
		public virtual PDFView _pdfView {
			get {
				return this.GetInstanceVariable <PDFView>("_pdfView");
			}
			set {
				this.SetInstanceVariable <PDFView>("_pdfView", value);
			}
		}
		
		[IBOutlet()]
		[ObjectiveCIVar("_searchProgress")]
		public virtual NSProgressIndicator _searchProgress {
			get {
				return this.GetInstanceVariable <NSProgressIndicator>("_searchProgress");
			}
			set {
				this.SetInstanceVariable <NSProgressIndicator>("_searchProgress", value);
			}
		}
		
		[IBOutlet()]
		[ObjectiveCIVar("_searchTable")]
		public virtual NSTableView _searchTable {
			get {
				return this.GetInstanceVariable <NSTableView>("_searchTable");
			}
			set {
				this.SetInstanceVariable <NSTableView>("_searchTable", value);
			}
		}
		
		[IBAction()]
		[ObjectiveCMessage("doFind:")]
		public virtual void __DoFind(Id sender) {
			this.DoFind(sender);
		}
		
		[IBAction()]
		[ObjectiveCMessage("performFindPanelAction:")]
		public virtual void __PerformFindPanelAction(Id sender) {
			this.PerformFindPanelAction(sender);
		}
		
		[IBAction()]
		[ObjectiveCMessage("takeDestinationFromOutline:")]
		public virtual void __TakeDestinationFromOutline(Id sender) {
			this.TakeDestinationFromOutline(sender);
		}
		
		[IBAction()]
		[ObjectiveCMessage("takeFindString:")]
		public virtual void __TakeFindString(Id sender) {
			this.TakeFindString(sender);
		}
		
		[IBAction()]
		[ObjectiveCMessage("toggleDrawer:")]
		public virtual void __ToggleDrawer(Id sender) {
			this.ToggleDrawer(sender);
		}
	}
}
